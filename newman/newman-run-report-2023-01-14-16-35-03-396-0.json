{
  "collection": {
    "_": {
      "postman_id": "ce1dc380-9adb-4168-9d51-763b0434f580",
      "exporter_id": "25227126"
    },
    "item": [
      {
        "id": "9676a752-3be6-4d2a-ade2-64131682cb2e",
        "name": "createBoard",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "1",
              "boards"
            ],
            "host": [
              "api",
              "trello",
              "com"
            ],
            "query": [
              {
                "key": "key",
                "value": "{{key\n}}"
              },
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "name",
                "value": "{{Boardname}}"
              },
              {
                "key": "defaultLists",
                "value": "false"
              }
            ],
            "variable": []
          },
          "method": "POST"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "d28c82d3-6714-4513-b080-e363d1bdf369",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {\r",
                "    pm.response.to.have.status(200);\r",
                "});\r",
                "let jsonData=pm.response.json();\r",
                "pm.environment.set(\"Boardid\",jsonData.id);\r",
                "console.log(\"environment-variables\",pm.environment);"
              ],
              "_lastExecutionId": "c68cbace-19b4-4bfd-b890-898bf4b643d6"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "845c0109-6c4f-4505-af99-ba5df5e8facc",
              "type": "text/javascript",
              "exec": [
                "pm.environment.set(\"Boardname\", '{{$randomFullName}}');"
              ],
              "_lastExecutionId": "7e2e14fb-72ab-443f-a878-c598aa07c1f6"
            }
          }
        ]
      },
      {
        "id": "91fe3671-108a-4dcd-96aa-4707b9ea48a0",
        "name": "createList",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "1",
              "lists"
            ],
            "host": [
              "api",
              "trello",
              "com"
            ],
            "query": [
              {
                "key": "key",
                "value": "{{key\n}}"
              },
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "idBoard",
                "value": "{{Boardid}}"
              },
              {
                "key": "name",
                "value": "List1"
              }
            ],
            "variable": []
          },
          "method": "POST"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "93e11287-54d2-42b9-8efb-4903df5106fc",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {\r",
                "    pm.response.to.have.status(200);\r",
                "});\r",
                "let jsonData=pm.response.json();\r",
                "pm.environment.set(\"idlist\",jsonData.id);"
              ],
              "_lastExecutionId": "a8f77c56-d94f-47d8-96f3-1f0d2197d857"
            }
          }
        ]
      },
      {
        "id": "f6ec76ef-a5af-4a03-a158-370f6ebe3087",
        "name": "create card",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "1",
              "cards"
            ],
            "host": [
              "api",
              "trello",
              "com"
            ],
            "query": [
              {
                "key": "key",
                "value": "{{key\n}}"
              },
              {
                "key": "token",
                "value": "{{token}}"
              },
              {
                "key": "idList",
                "value": "{{idlist}}"
              },
              {
                "key": "name",
                "value": "Login"
              }
            ],
            "variable": []
          },
          "method": "POST"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5deb5b6b-0d28-4bf6-8393-c2874491fc2a",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {\r",
                "    pm.response.to.have.status(200);\r",
                "});"
              ],
              "_lastExecutionId": "ff30d81e-71f9-4037-98a1-7c23773fd92d"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "ce1dc380-9adb-4168-9d51-763b0434f580",
      "name": "workflow",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2023-01-14T14:26:26.715Z",
      "postman_exported_using": "Postman/10.7.1"
    },
    "id": "6e7949cc-6fde-4325-8452-4868ea86d030",
    "name": "workflow",
    "values": [
      {
        "type": "any",
        "value": "f446670a375c6b1b60a9380f8a2ed19b",
        "key": "key\n"
      },
      {
        "type": "any",
        "value": "ATTA253b3d456c3f1d34812cbdb2edc0aa9a0a785b3ab6f07c47ccbf6af8fcc7eda9327DC473",
        "key": "token"
      },
      {
        "type": "any",
        "value": "{{$randomFullName}}",
        "key": "Boardname"
      },
      {
        "type": "any",
        "value": null,
        "key": "Boardid"
      },
      {
        "type": "any",
        "value": "",
        "key": "idlist"
      },
      {
        "type": "any",
        "value": "",
        "key": "Board"
      }
    ]
  },
  "globals": {
    "id": "8c748753-5659-4d85-80ba-e7558063c237",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 4,
        "pending": 0,
        "failed": 1
      },
      "prerequests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 3,
        "pending": 0,
        "failed": 3
      },
      "testScripts": {
        "total": 3,
        "pending": 0,
        "failed": 1
      },
      "prerequestScripts": {
        "total": 1,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 325,
      "responseMin": 200,
      "responseMax": 554,
      "responseSd": 162.15424755460464,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1673714102153,
      "completed": 1673714103387
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 3,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "635905d6-3c14-4b34-8359-7d757c520886",
          "httpRequestId": "1e9cf977-85f8-4e6e-877b-96ae3ac5e586"
        },
        "item": {
          "id": "9676a752-3be6-4d2a-ade2-64131682cb2e",
          "name": "createBoard",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "1",
                "boards"
              ],
              "host": [
                "api",
                "trello",
                "com"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "{{key\n}}"
                },
                {
                  "key": "token",
                  "value": "{{token}}"
                },
                {
                  "key": "name",
                  "value": "{{Boardname}}"
                },
                {
                  "key": "defaultLists",
                  "value": "false"
                }
              ],
              "variable": []
            },
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d28c82d3-6714-4513-b080-e363d1bdf369",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "let jsonData=pm.response.json();\r",
                  "pm.environment.set(\"Boardid\",jsonData.id);\r",
                  "console.log(\"environment-variables\",pm.environment);"
                ],
                "_lastExecutionId": "c68cbace-19b4-4bfd-b890-898bf4b643d6"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "845c0109-6c4f-4505-af99-ba5df5e8facc",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"Boardname\", '{{$randomFullName}}');"
                ],
                "_lastExecutionId": "7e2e14fb-72ab-443f-a878-c598aa07c1f6"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "1",
              "boards"
            ],
            "host": [
              "api",
              "trello",
              "com"
            ],
            "query": [
              {
                "key": "key",
                "value": "f446670a375c6b1b60a9380f8a2ed19b"
              },
              {
                "key": "token",
                "value": "ATTA253b3d456c3f1d34812cbdb2edc0aa9a0a785b3ab6f07c47ccbf6af8fcc7eda9327DC473"
              },
              {
                "key": "name",
                "value": "Caleb%20Stokes"
              },
              {
                "key": "defaultLists",
                "value": "false"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "aae5e406-fb44-4546-9c51-54792eb71b8c",
              "system": true
            },
            {
              "key": "Host",
              "value": "api.trello.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST"
        },
        "response": {
          "id": "76d1def7-5bd9-4b4f-a5e5-4a16572d84db",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Date",
              "value": "Sat, 14 Jan 2023 16:35:04 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "67"
            },
            {
              "key": "X-Dns-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Surrogate-Control",
              "value": "no-store"
            },
            {
              "key": "Cache-Control",
              "value": "no-store, no-cache, must-revalidate, proxy-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Trello-Version",
              "value": "1.181025.0"
            },
            {
              "key": "X-Trello-Environment",
              "value": "Production"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET, PUT, POST, DELETE"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Authorization, Accept, Content-Type"
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": "x-rate-limit-api-key-interval-ms, x-rate-limit-api-key-max, x-rate-limit-api-key-remaining, x-rate-limit-api-token-interval-ms, x-rate-limit-api-token-max, x-rate-limit-api-token-remaining"
            },
            {
              "key": "X-Rate-Limit-Api-Token-Interval-Ms",
              "value": "10000"
            },
            {
              "key": "X-Rate-Limit-Api-Token-Max",
              "value": "100"
            },
            {
              "key": "X-Rate-Limit-Api-Token-Remaining",
              "value": "99"
            },
            {
              "key": "X-Rate-Limit-Db-Query-Time-Interval-Ms",
              "value": "600000"
            },
            {
              "key": "X-Rate-Limit-Db-Query-Time-Max",
              "value": "7200000"
            },
            {
              "key": "X-Rate-Limit-Db-Query-Time-Remaining",
              "value": "7199990"
            },
            {
              "key": "X-Rate-Limit-Api-Key-Interval-Ms",
              "value": "10000"
            },
            {
              "key": "X-Rate-Limit-Api-Key-Max",
              "value": "300"
            },
            {
              "key": "X-Rate-Limit-Api-Key-Remaining",
              "value": "299"
            },
            {
              "key": "X-Rate-Limit-Member-Interval-Ms",
              "value": "10000"
            },
            {
              "key": "X-Rate-Limit-Member-Max",
              "value": "375"
            },
            {
              "key": "X-Rate-Limit-Member-Remaining",
              "value": "374"
            },
            {
              "key": "Server",
              "value": "AtlassianEdge"
            },
            {
              "key": "Expect-Ct",
              "value": "report-uri=\"https://web-security-reports.services.atlassian.com/expect-ct-report/trello-edge\", max-age=86400"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Xss-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Atl-Traceid",
              "value": "98fc8606aaf06671"
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\": [{\"url\": \"https://dz8aopenkvv6s.cloudfront.net\"}], \"group\": \"endpoint-1\", \"include_subdomains\": true, \"max_age\": 600}"
            },
            {
              "key": "Nel",
              "value": "{\"failure_fraction\": 0.001, \"include_subdomains\": true, \"max_age\": 600, \"report_to\": \"endpoint-1\"}"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=63072000; preload"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              66,
              111,
              97,
              114,
              100,
              32,
              109,
              117,
              115,
              116,
              32,
              98,
              101,
              32,
              105,
              110,
              32,
              97,
              32,
              116,
              101,
              97,
              109,
              32,
              226,
              128,
              148,
              32,
              115,
              112,
              101,
              99,
              105,
              102,
              121,
              32,
              97,
              110,
              32,
              105,
              100,
              79,
              114,
              103,
              97,
              110,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 554,
          "responseSize": 67
        },
        "id": "9676a752-3be6-4d2a-ade2-64131682cb2e",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "36e00fd2-5ea0-4fbd-83d1-758de6028199",
          "length": 3,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5597d0f4-55ac-4a7f-aba2-57a527ccbded"
        },
        "item": {
          "id": "91fe3671-108a-4dcd-96aa-4707b9ea48a0",
          "name": "createList",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "1",
                "lists"
              ],
              "host": [
                "api",
                "trello",
                "com"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "{{key\n}}"
                },
                {
                  "key": "token",
                  "value": "{{token}}"
                },
                {
                  "key": "idBoard",
                  "value": "{{Boardid}}"
                },
                {
                  "key": "name",
                  "value": "List1"
                }
              ],
              "variable": []
            },
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "93e11287-54d2-42b9-8efb-4903df5106fc",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "let jsonData=pm.response.json();\r",
                  "pm.environment.set(\"idlist\",jsonData.id);"
                ],
                "_lastExecutionId": "a8f77c56-d94f-47d8-96f3-1f0d2197d857"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "1",
              "lists"
            ],
            "host": [
              "api",
              "trello",
              "com"
            ],
            "query": [
              {
                "key": "key",
                "value": "f446670a375c6b1b60a9380f8a2ed19b"
              },
              {
                "key": "token",
                "value": "ATTA253b3d456c3f1d34812cbdb2edc0aa9a0a785b3ab6f07c47ccbf6af8fcc7eda9327DC473"
              },
              {
                "key": "idBoard",
                "value": "null"
              },
              {
                "key": "name",
                "value": "List1"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a65642ef-9f26-452c-98be-a553e4271f0d",
              "system": true
            },
            {
              "key": "Host",
              "value": "api.trello.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST"
        },
        "response": {
          "id": "90731c3b-5df9-4bb0-aa75-fe036136ebd4",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Date",
              "value": "Sat, 14 Jan 2023 16:35:04 GMT"
            },
            {
              "key": "Content-Type",
              "value": "text/plain; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "25"
            },
            {
              "key": "X-Dns-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Surrogate-Control",
              "value": "no-store"
            },
            {
              "key": "Cache-Control",
              "value": "no-store, no-cache, must-revalidate, proxy-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Trello-Version",
              "value": "1.181025.0"
            },
            {
              "key": "X-Trello-Environment",
              "value": "Production"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET, PUT, POST, DELETE"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Authorization, Accept, Content-Type"
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": "x-rate-limit-api-key-interval-ms, x-rate-limit-api-key-max, x-rate-limit-api-key-remaining, x-rate-limit-api-token-interval-ms, x-rate-limit-api-token-max, x-rate-limit-api-token-remaining"
            },
            {
              "key": "X-Rate-Limit-Api-Token-Interval-Ms",
              "value": "10000"
            },
            {
              "key": "X-Rate-Limit-Api-Token-Max",
              "value": "100"
            },
            {
              "key": "X-Rate-Limit-Api-Token-Remaining",
              "value": "98"
            },
            {
              "key": "X-Rate-Limit-Db-Query-Time-Interval-Ms",
              "value": "600000"
            },
            {
              "key": "X-Rate-Limit-Db-Query-Time-Max",
              "value": "7200000"
            },
            {
              "key": "X-Rate-Limit-Db-Query-Time-Remaining",
              "value": "7199990"
            },
            {
              "key": "X-Rate-Limit-Api-Key-Interval-Ms",
              "value": "10000"
            },
            {
              "key": "X-Rate-Limit-Api-Key-Max",
              "value": "300"
            },
            {
              "key": "X-Rate-Limit-Api-Key-Remaining",
              "value": "298"
            },
            {
              "key": "Server",
              "value": "AtlassianEdge"
            },
            {
              "key": "Expect-Ct",
              "value": "report-uri=\"https://web-security-reports.services.atlassian.com/expect-ct-report/trello-edge\", max-age=86400"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Xss-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Atl-Traceid",
              "value": "ab6e69027d775af0"
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\": [{\"url\": \"https://dz8aopenkvv6s.cloudfront.net\"}], \"group\": \"endpoint-1\", \"include_subdomains\": true, \"max_age\": 600}"
            },
            {
              "key": "Nel",
              "value": "{\"failure_fraction\": 0.001, \"include_subdomains\": true, \"max_age\": 600, \"report_to\": \"endpoint-1\"}"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=63072000; preload"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              118,
              97,
              108,
              117,
              101,
              32,
              102,
              111,
              114,
              32,
              105,
              100,
              66,
              111,
              97,
              114,
              100
            ]
          },
          "cookie": [],
          "responseTime": 221,
          "responseSize": 25
        },
        "id": "91fe3671-108a-4dcd-96aa-4707b9ea48a0",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:2)"
            }
          }
        ],
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "Unexpected token 'i' at 1:1\ninvalid value for idBoard\n^",
              "checksum": "597086abd97e667b12f9f5e9a2449677",
              "id": "f4c33bc5-5552-4647-8f15-6f2a7cc2006b",
              "timestamp": 1673714103126,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "6049cb82-970e-4683-b10c-3deba3e658e8",
          "length": 3,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0b3e6416-86e2-47cb-8748-02cd54482897"
        },
        "item": {
          "id": "f6ec76ef-a5af-4a03-a158-370f6ebe3087",
          "name": "create card",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "1",
                "cards"
              ],
              "host": [
                "api",
                "trello",
                "com"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "{{key\n}}"
                },
                {
                  "key": "token",
                  "value": "{{token}}"
                },
                {
                  "key": "idList",
                  "value": "{{idlist}}"
                },
                {
                  "key": "name",
                  "value": "Login"
                }
              ],
              "variable": []
            },
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5deb5b6b-0d28-4bf6-8393-c2874491fc2a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});"
                ],
                "_lastExecutionId": "ff30d81e-71f9-4037-98a1-7c23773fd92d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "1",
              "cards"
            ],
            "host": [
              "api",
              "trello",
              "com"
            ],
            "query": [
              {
                "key": "key",
                "value": "f446670a375c6b1b60a9380f8a2ed19b"
              },
              {
                "key": "token",
                "value": "ATTA253b3d456c3f1d34812cbdb2edc0aa9a0a785b3ab6f07c47ccbf6af8fcc7eda9327DC473"
              },
              {
                "key": "idList",
                "value": ""
              },
              {
                "key": "name",
                "value": "Login"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f33e6b53-4757-4fa1-baba-d0f57fe56d28",
              "system": true
            },
            {
              "key": "Host",
              "value": "api.trello.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST"
        },
        "response": {
          "id": "f13c156a-9626-4a70-94ba-81d658e7f3ef",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Date",
              "value": "Sat, 14 Jan 2023 16:35:04 GMT"
            },
            {
              "key": "Content-Type",
              "value": "text/plain; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "24"
            },
            {
              "key": "X-Dns-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Surrogate-Control",
              "value": "no-store"
            },
            {
              "key": "Cache-Control",
              "value": "no-store, no-cache, must-revalidate, proxy-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Trello-Version",
              "value": "1.181025.0"
            },
            {
              "key": "X-Trello-Environment",
              "value": "Production"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET, PUT, POST, DELETE"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Authorization, Accept, Content-Type"
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": "x-rate-limit-api-key-interval-ms, x-rate-limit-api-key-max, x-rate-limit-api-key-remaining, x-rate-limit-api-token-interval-ms, x-rate-limit-api-token-max, x-rate-limit-api-token-remaining"
            },
            {
              "key": "X-Rate-Limit-Api-Token-Interval-Ms",
              "value": "10000"
            },
            {
              "key": "X-Rate-Limit-Api-Token-Max",
              "value": "100"
            },
            {
              "key": "X-Rate-Limit-Api-Token-Remaining",
              "value": "97"
            },
            {
              "key": "X-Rate-Limit-Db-Query-Time-Interval-Ms",
              "value": "600000"
            },
            {
              "key": "X-Rate-Limit-Db-Query-Time-Max",
              "value": "7200000"
            },
            {
              "key": "X-Rate-Limit-Db-Query-Time-Remaining",
              "value": "7199990"
            },
            {
              "key": "X-Rate-Limit-Api-Key-Interval-Ms",
              "value": "10000"
            },
            {
              "key": "X-Rate-Limit-Api-Key-Max",
              "value": "300"
            },
            {
              "key": "X-Rate-Limit-Api-Key-Remaining",
              "value": "297"
            },
            {
              "key": "Server",
              "value": "AtlassianEdge"
            },
            {
              "key": "Expect-Ct",
              "value": "report-uri=\"https://web-security-reports.services.atlassian.com/expect-ct-report/trello-edge\", max-age=86400"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Xss-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Atl-Traceid",
              "value": "9a0ef1a803153283"
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\": [{\"url\": \"https://dz8aopenkvv6s.cloudfront.net\"}], \"group\": \"endpoint-1\", \"include_subdomains\": true, \"max_age\": 600}"
            },
            {
              "key": "Nel",
              "value": "{\"failure_fraction\": 0.001, \"include_subdomains\": true, \"max_age\": 600, \"report_to\": \"endpoint-1\"}"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=63072000; preload"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              118,
              97,
              108,
              117,
              101,
              32,
              102,
              111,
              114,
              32,
              105,
              100,
              76,
              105,
              115,
              116
            ]
          },
          "cookie": [],
          "responseTime": 200,
          "responseSize": 24
        },
        "id": "f6ec76ef-a5af-4a03-a158-370f6ebe3087",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:3)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 116
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 400",
          "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "1b6d82fd325bf4b22cff01833651aec6",
          "id": "5a8832cb-e0bc-4a9f-ba61-bba18ee9b9c2",
          "timestamp": 1673714102826,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "9676a752-3be6-4d2a-ade2-64131682cb2e",
          "name": "createBoard",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "1",
                "boards"
              ],
              "host": [
                "api",
                "trello",
                "com"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "{{key\n}}"
                },
                {
                  "key": "token",
                  "value": "{{token}}"
                },
                {
                  "key": "name",
                  "value": "{{Boardname}}"
                },
                {
                  "key": "defaultLists",
                  "value": "false"
                }
              ],
              "variable": []
            },
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d28c82d3-6714-4513-b080-e363d1bdf369",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "let jsonData=pm.response.json();\r",
                  "pm.environment.set(\"Boardid\",jsonData.id);\r",
                  "console.log(\"environment-variables\",pm.environment);"
                ],
                "_lastExecutionId": "c68cbace-19b4-4bfd-b890-898bf4b643d6"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "845c0109-6c4f-4505-af99-ba5df5e8facc",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"Boardname\", '{{$randomFullName}}');"
                ],
                "_lastExecutionId": "7e2e14fb-72ab-443f-a878-c598aa07c1f6"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "ce1dc380-9adb-4168-9d51-763b0434f580",
            "exporter_id": "25227126"
          },
          "item": [
            {
              "id": "9676a752-3be6-4d2a-ade2-64131682cb2e",
              "name": "createBoard",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "1",
                    "boards"
                  ],
                  "host": [
                    "api",
                    "trello",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "key",
                      "value": "{{key\n}}"
                    },
                    {
                      "key": "token",
                      "value": "{{token}}"
                    },
                    {
                      "key": "name",
                      "value": "{{Boardname}}"
                    },
                    {
                      "key": "defaultLists",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d28c82d3-6714-4513-b080-e363d1bdf369",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "let jsonData=pm.response.json();\r",
                      "pm.environment.set(\"Boardid\",jsonData.id);\r",
                      "console.log(\"environment-variables\",pm.environment);"
                    ],
                    "_lastExecutionId": "c68cbace-19b4-4bfd-b890-898bf4b643d6"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "845c0109-6c4f-4505-af99-ba5df5e8facc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"Boardname\", '{{$randomFullName}}');"
                    ],
                    "_lastExecutionId": "7e2e14fb-72ab-443f-a878-c598aa07c1f6"
                  }
                }
              ]
            },
            {
              "id": "91fe3671-108a-4dcd-96aa-4707b9ea48a0",
              "name": "createList",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "1",
                    "lists"
                  ],
                  "host": [
                    "api",
                    "trello",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "key",
                      "value": "{{key\n}}"
                    },
                    {
                      "key": "token",
                      "value": "{{token}}"
                    },
                    {
                      "key": "idBoard",
                      "value": "{{Boardid}}"
                    },
                    {
                      "key": "name",
                      "value": "List1"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "93e11287-54d2-42b9-8efb-4903df5106fc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "let jsonData=pm.response.json();\r",
                      "pm.environment.set(\"idlist\",jsonData.id);"
                    ],
                    "_lastExecutionId": "a8f77c56-d94f-47d8-96f3-1f0d2197d857"
                  }
                }
              ]
            },
            {
              "id": "f6ec76ef-a5af-4a03-a158-370f6ebe3087",
              "name": "create card",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "1",
                    "cards"
                  ],
                  "host": [
                    "api",
                    "trello",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "key",
                      "value": "{{key\n}}"
                    },
                    {
                      "key": "token",
                      "value": "{{token}}"
                    },
                    {
                      "key": "idList",
                      "value": "{{idlist}}"
                    },
                    {
                      "key": "name",
                      "value": "Login"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5deb5b6b-0d28-4bf6-8393-c2874491fc2a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});"
                    ],
                    "_lastExecutionId": "ff30d81e-71f9-4037-98a1-7c23773fd92d"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "ce1dc380-9adb-4168-9d51-763b0434f580",
            "name": "workflow",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 3,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "635905d6-3c14-4b34-8359-7d757c520886",
          "httpRequestId": "1e9cf977-85f8-4e6e-877b-96ae3ac5e586",
          "scriptId": "d28c82d3-6714-4513-b080-e363d1bdf369",
          "execution": "c68cbace-19b4-4bfd-b890-898bf4b643d6"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 400",
          "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "36a8da34acf97ca6ef4513b3881cda72",
          "id": "91e85629-66c9-4093-b8ec-204fe6972856",
          "timestamp": 1673714103119,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "91fe3671-108a-4dcd-96aa-4707b9ea48a0",
          "name": "createList",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "1",
                "lists"
              ],
              "host": [
                "api",
                "trello",
                "com"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "{{key\n}}"
                },
                {
                  "key": "token",
                  "value": "{{token}}"
                },
                {
                  "key": "idBoard",
                  "value": "{{Boardid}}"
                },
                {
                  "key": "name",
                  "value": "List1"
                }
              ],
              "variable": []
            },
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "93e11287-54d2-42b9-8efb-4903df5106fc",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "let jsonData=pm.response.json();\r",
                  "pm.environment.set(\"idlist\",jsonData.id);"
                ],
                "_lastExecutionId": "a8f77c56-d94f-47d8-96f3-1f0d2197d857"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "ce1dc380-9adb-4168-9d51-763b0434f580",
            "exporter_id": "25227126"
          },
          "item": [
            {
              "id": "9676a752-3be6-4d2a-ade2-64131682cb2e",
              "name": "createBoard",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "1",
                    "boards"
                  ],
                  "host": [
                    "api",
                    "trello",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "key",
                      "value": "{{key\n}}"
                    },
                    {
                      "key": "token",
                      "value": "{{token}}"
                    },
                    {
                      "key": "name",
                      "value": "{{Boardname}}"
                    },
                    {
                      "key": "defaultLists",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d28c82d3-6714-4513-b080-e363d1bdf369",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "let jsonData=pm.response.json();\r",
                      "pm.environment.set(\"Boardid\",jsonData.id);\r",
                      "console.log(\"environment-variables\",pm.environment);"
                    ],
                    "_lastExecutionId": "c68cbace-19b4-4bfd-b890-898bf4b643d6"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "845c0109-6c4f-4505-af99-ba5df5e8facc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"Boardname\", '{{$randomFullName}}');"
                    ],
                    "_lastExecutionId": "7e2e14fb-72ab-443f-a878-c598aa07c1f6"
                  }
                }
              ]
            },
            {
              "id": "91fe3671-108a-4dcd-96aa-4707b9ea48a0",
              "name": "createList",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "1",
                    "lists"
                  ],
                  "host": [
                    "api",
                    "trello",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "key",
                      "value": "{{key\n}}"
                    },
                    {
                      "key": "token",
                      "value": "{{token}}"
                    },
                    {
                      "key": "idBoard",
                      "value": "{{Boardid}}"
                    },
                    {
                      "key": "name",
                      "value": "List1"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "93e11287-54d2-42b9-8efb-4903df5106fc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "let jsonData=pm.response.json();\r",
                      "pm.environment.set(\"idlist\",jsonData.id);"
                    ],
                    "_lastExecutionId": "a8f77c56-d94f-47d8-96f3-1f0d2197d857"
                  }
                }
              ]
            },
            {
              "id": "f6ec76ef-a5af-4a03-a158-370f6ebe3087",
              "name": "create card",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "1",
                    "cards"
                  ],
                  "host": [
                    "api",
                    "trello",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "key",
                      "value": "{{key\n}}"
                    },
                    {
                      "key": "token",
                      "value": "{{token}}"
                    },
                    {
                      "key": "idList",
                      "value": "{{idlist}}"
                    },
                    {
                      "key": "name",
                      "value": "Login"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5deb5b6b-0d28-4bf6-8393-c2874491fc2a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});"
                    ],
                    "_lastExecutionId": "ff30d81e-71f9-4037-98a1-7c23773fd92d"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "ce1dc380-9adb-4168-9d51-763b0434f580",
            "name": "workflow",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "36e00fd2-5ea0-4fbd-83d1-758de6028199",
          "length": 3,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5597d0f4-55ac-4a7f-aba2-57a527ccbded",
          "scriptId": "93e11287-54d2-42b9-8efb-4903df5106fc",
          "execution": "a8f77c56-d94f-47d8-96f3-1f0d2197d857"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "JSONError",
          "message": "Unexpected token 'i' at 1:1\ninvalid value for idBoard\n^",
          "checksum": "597086abd97e667b12f9f5e9a2449677",
          "id": "f4c33bc5-5552-4647-8f15-6f2a7cc2006b",
          "timestamp": 1673714103126,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "91fe3671-108a-4dcd-96aa-4707b9ea48a0",
          "name": "createList",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "1",
                "lists"
              ],
              "host": [
                "api",
                "trello",
                "com"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "{{key\n}}"
                },
                {
                  "key": "token",
                  "value": "{{token}}"
                },
                {
                  "key": "idBoard",
                  "value": "{{Boardid}}"
                },
                {
                  "key": "name",
                  "value": "List1"
                }
              ],
              "variable": []
            },
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "93e11287-54d2-42b9-8efb-4903df5106fc",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "let jsonData=pm.response.json();\r",
                  "pm.environment.set(\"idlist\",jsonData.id);"
                ],
                "_lastExecutionId": "a8f77c56-d94f-47d8-96f3-1f0d2197d857"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "ce1dc380-9adb-4168-9d51-763b0434f580",
            "exporter_id": "25227126"
          },
          "item": [
            {
              "id": "9676a752-3be6-4d2a-ade2-64131682cb2e",
              "name": "createBoard",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "1",
                    "boards"
                  ],
                  "host": [
                    "api",
                    "trello",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "key",
                      "value": "{{key\n}}"
                    },
                    {
                      "key": "token",
                      "value": "{{token}}"
                    },
                    {
                      "key": "name",
                      "value": "{{Boardname}}"
                    },
                    {
                      "key": "defaultLists",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d28c82d3-6714-4513-b080-e363d1bdf369",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "let jsonData=pm.response.json();\r",
                      "pm.environment.set(\"Boardid\",jsonData.id);\r",
                      "console.log(\"environment-variables\",pm.environment);"
                    ],
                    "_lastExecutionId": "c68cbace-19b4-4bfd-b890-898bf4b643d6"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "845c0109-6c4f-4505-af99-ba5df5e8facc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"Boardname\", '{{$randomFullName}}');"
                    ],
                    "_lastExecutionId": "7e2e14fb-72ab-443f-a878-c598aa07c1f6"
                  }
                }
              ]
            },
            {
              "id": "91fe3671-108a-4dcd-96aa-4707b9ea48a0",
              "name": "createList",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "1",
                    "lists"
                  ],
                  "host": [
                    "api",
                    "trello",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "key",
                      "value": "{{key\n}}"
                    },
                    {
                      "key": "token",
                      "value": "{{token}}"
                    },
                    {
                      "key": "idBoard",
                      "value": "{{Boardid}}"
                    },
                    {
                      "key": "name",
                      "value": "List1"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "93e11287-54d2-42b9-8efb-4903df5106fc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "let jsonData=pm.response.json();\r",
                      "pm.environment.set(\"idlist\",jsonData.id);"
                    ],
                    "_lastExecutionId": "a8f77c56-d94f-47d8-96f3-1f0d2197d857"
                  }
                }
              ]
            },
            {
              "id": "f6ec76ef-a5af-4a03-a158-370f6ebe3087",
              "name": "create card",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "1",
                    "cards"
                  ],
                  "host": [
                    "api",
                    "trello",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "key",
                      "value": "{{key\n}}"
                    },
                    {
                      "key": "token",
                      "value": "{{token}}"
                    },
                    {
                      "key": "idList",
                      "value": "{{idlist}}"
                    },
                    {
                      "key": "name",
                      "value": "Login"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5deb5b6b-0d28-4bf6-8393-c2874491fc2a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});"
                    ],
                    "_lastExecutionId": "ff30d81e-71f9-4037-98a1-7c23773fd92d"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "ce1dc380-9adb-4168-9d51-763b0434f580",
            "name": "workflow",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "36e00fd2-5ea0-4fbd-83d1-758de6028199",
          "length": 3,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5597d0f4-55ac-4a7f-aba2-57a527ccbded",
          "scriptId": "93e11287-54d2-42b9-8efb-4903df5106fc"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 400",
          "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "63f5089d6fd02906ce2997a7c9efa585",
          "id": "73385e72-d4ba-4be0-9eb8-8dcc4298f400",
          "timestamp": 1673714103372,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "f6ec76ef-a5af-4a03-a158-370f6ebe3087",
          "name": "create card",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "1",
                "cards"
              ],
              "host": [
                "api",
                "trello",
                "com"
              ],
              "query": [
                {
                  "key": "key",
                  "value": "{{key\n}}"
                },
                {
                  "key": "token",
                  "value": "{{token}}"
                },
                {
                  "key": "idList",
                  "value": "{{idlist}}"
                },
                {
                  "key": "name",
                  "value": "Login"
                }
              ],
              "variable": []
            },
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5deb5b6b-0d28-4bf6-8393-c2874491fc2a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});"
                ],
                "_lastExecutionId": "ff30d81e-71f9-4037-98a1-7c23773fd92d"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "ce1dc380-9adb-4168-9d51-763b0434f580",
            "exporter_id": "25227126"
          },
          "item": [
            {
              "id": "9676a752-3be6-4d2a-ade2-64131682cb2e",
              "name": "createBoard",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "1",
                    "boards"
                  ],
                  "host": [
                    "api",
                    "trello",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "key",
                      "value": "{{key\n}}"
                    },
                    {
                      "key": "token",
                      "value": "{{token}}"
                    },
                    {
                      "key": "name",
                      "value": "{{Boardname}}"
                    },
                    {
                      "key": "defaultLists",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d28c82d3-6714-4513-b080-e363d1bdf369",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "let jsonData=pm.response.json();\r",
                      "pm.environment.set(\"Boardid\",jsonData.id);\r",
                      "console.log(\"environment-variables\",pm.environment);"
                    ],
                    "_lastExecutionId": "c68cbace-19b4-4bfd-b890-898bf4b643d6"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "845c0109-6c4f-4505-af99-ba5df5e8facc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"Boardname\", '{{$randomFullName}}');"
                    ],
                    "_lastExecutionId": "7e2e14fb-72ab-443f-a878-c598aa07c1f6"
                  }
                }
              ]
            },
            {
              "id": "91fe3671-108a-4dcd-96aa-4707b9ea48a0",
              "name": "createList",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "1",
                    "lists"
                  ],
                  "host": [
                    "api",
                    "trello",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "key",
                      "value": "{{key\n}}"
                    },
                    {
                      "key": "token",
                      "value": "{{token}}"
                    },
                    {
                      "key": "idBoard",
                      "value": "{{Boardid}}"
                    },
                    {
                      "key": "name",
                      "value": "List1"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "93e11287-54d2-42b9-8efb-4903df5106fc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "let jsonData=pm.response.json();\r",
                      "pm.environment.set(\"idlist\",jsonData.id);"
                    ],
                    "_lastExecutionId": "a8f77c56-d94f-47d8-96f3-1f0d2197d857"
                  }
                }
              ]
            },
            {
              "id": "f6ec76ef-a5af-4a03-a158-370f6ebe3087",
              "name": "create card",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "1",
                    "cards"
                  ],
                  "host": [
                    "api",
                    "trello",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "key",
                      "value": "{{key\n}}"
                    },
                    {
                      "key": "token",
                      "value": "{{token}}"
                    },
                    {
                      "key": "idList",
                      "value": "{{idlist}}"
                    },
                    {
                      "key": "name",
                      "value": "Login"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5deb5b6b-0d28-4bf6-8393-c2874491fc2a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});"
                    ],
                    "_lastExecutionId": "ff30d81e-71f9-4037-98a1-7c23773fd92d"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "ce1dc380-9adb-4168-9d51-763b0434f580",
            "name": "workflow",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "6049cb82-970e-4683-b10c-3deba3e658e8",
          "length": 3,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0b3e6416-86e2-47cb-8748-02cd54482897",
          "scriptId": "5deb5b6b-0d28-4bf6-8393-c2874491fc2a",
          "execution": "ff30d81e-71f9-4037-98a1-7c23773fd92d"
        }
      }
    ],
    "error": null
  }
}